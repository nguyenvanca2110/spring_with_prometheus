plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id "com.google.cloud.tools.jib" version "3.4.3"
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version "5.1.0.4882"
	id 'jacoco'
}

group = 'com.gradle'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

jar {
	enabled=true
}

repositories {
//	maven { url "https://package-uswe.hcloud.hmc.co.kr/repository/maven-public/" }
	mavenCentral()
}

//ext {
//	storegyUrl = 'https://package-uswe.hcloud.hmc.co.kr'
//	coreBuildVersion = '3.4.10'
//}
//apply from: "${storegyUrl}/repository/maven-public/com/hae/ccs-core/build/${coreBuildVersion}/build-${coreBuildVersion}.gradle"


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	compileOnly 'org.projectlombok:lombok'
//	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Metrics
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation "io.micrometer:micrometer-registry-prometheus"
	implementation "io.micrometer:micrometer-registry-prometheus-simpleclient:1.15.0"
	implementation 'io.prometheus:simpleclient_pushgateway'

}
// ---- Container image
jib {
	from {
		image = 'openjdk:21'
	} // Base image for the container

	to {
		image = "${project.name}" // Output image name and tag
		// Refer https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin#quickstart
		auth {
			username = "*****"
			password = "*****"
		}
		// Optionally, specify a registry: image = 'docker.io/myusername/myapp:latest'

		tags = ["${project.version}", "latest"]
	}

	container {
		jvmFlags =['-Dfile.encoding=UTF-8']
		// JVM arguments mainClass = 'com.example.MyApplication'
		// Main class of your Spring Boot app ports = ['8080']
		// Exposed ports creationTime = 'USE_CURRENT_TIMESTAMP'
		// Set image creation time
		//   container {
		//    jvmFlags = ['-Dmy.property=example.value', '-Xms512m', '-Xdebug']
		//    mainClass = 'mypackage.MyApp'
		//    args = ['some', 'args']
		//    ports = ['1000', '2000-2003/udp']
		//    labels = [key1:'value1', key2:'value2']
		//    format = 'OCI'
		//  }
	}
}